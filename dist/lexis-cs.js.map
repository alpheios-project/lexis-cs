{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///./index.js","webpack:///./node_modules/uuid/lib/bytesToUuid.js","webpack:///./node_modules/uuid/lib/rng-browser.js","webpack:///./node_modules/uuid/v4.js","webpack:///./src/messaging/destinations/destination.js","webpack:///./src/messaging/destinations/window-destination.js","webpack:///./src/messaging/messages/message.js","webpack:///./src/messaging/messages/request-message.js","webpack:///./src/messaging/messages/response-message.js","webpack:///./src/messaging/messaging-service.js","webpack:///./src/messaging/stored-request.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;QCVA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;;AClFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAsE;AACe;AACV;;AAEb;;;;;;;;;;;;ACJ9D;AACA;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;ACvBA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,iCAAiC;;AAEjC;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;;AAEA;AACA,sBAAsB,QAAQ;AAC9B;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;ACjCA,UAAU,mBAAO,CAAC,yDAAW;AAC7B,kBAAkB,mBAAO,CAAC,iEAAmB;;AAE7C;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,SAAS;AAC7B;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;;;;;;;AC5BA;AAAA;AAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACPA;AAAA;AAAA;AAA0C;;AAE3B,gCAAgC,uDAAW;AAC1D,sBAAsB,4BAA4B,KAAK;AACvD;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,8CAA8C,qBAAqB;AACnE;AACA,6BAA6B,qBAAqB;AAClD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACjDA;AAAA;AAAA;AAAA;AAA4B;;AAEb;AACf;AACA;AACA;AACA,cAAc,8CAAM;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACzBA;AAAA;AAAA;AAAkC;;AAEnB,6BAA6B,mDAAO;AACnD;AACA;AACA,gBAAgB,mDAAO;AACvB;AACA;;;;;;;;;;;;;ACPA;AAAA;AAAA;AAAkC;;AAElC;AACA;AACA;AACe,8BAA8B,mDAAO;AACpD;AACA,aAAa,eAAe;AAC5B,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB;AACA;AACA,iCAAiC;AACjC;AACA,gBAAgB,mDAAO;AACvB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,MAAM;AACnB,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,mDAAO;AACxC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;ACnEA;AAAA;AAAA;AAAA;AAAyD;AACb;;AAE7B;AACf;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mDAAmD,kBAAkB;AACrE;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa,eAAe;AAC5B,aAAa,OAAO;AACpB,cAAc,QAAQ;AACtB;AACA;AACA,4BAA4B,uDAAa;AACzC;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,kEAAe;AAC1C;AACA,2BAA2B,kEAAe;AAC1C;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,6CAA6C,SAAS;AACtD;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,6CAA6C,SAAS;AACtD;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACtHA;AAAA;AAAe;AACf;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"lexis-cs.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./index.js\");\n","import MessagingService from '@lexisCs/messaging/messaging-service.js'\r\nimport WindowDestination from '@lexisCs/messaging/destinations/window-destination.js'\r\nimport RequestMessage from '@lexisCs/messaging/messages/request-message.js'\r\n\r\nexport { MessagingService, WindowDestination, RequestMessage }\r\n","/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\nfor (var i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex;\n  // join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4\n  return ([bth[buf[i++]], bth[buf[i++]], \n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]],\n\tbth[buf[i++]], bth[buf[i++]],\n\tbth[buf[i++]], bth[buf[i++]]]).join('');\n}\n\nmodule.exports = bytesToUuid;\n","// Unique ID creation requires a high quality random # generator.  In the\n// browser this is a little complicated due to unknown quality of Math.random()\n// and inconsistent support for the `crypto` API.  We do the best we can via\n// feature-detection\n\n// getRandomValues needs to be invoked in a context where \"this\" is a Crypto\n// implementation. Also, find the complete implementation of crypto on IE11.\nvar getRandomValues = (typeof(crypto) != 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto)) ||\n                      (typeof(msCrypto) != 'undefined' && typeof window.msCrypto.getRandomValues == 'function' && msCrypto.getRandomValues.bind(msCrypto));\n\nif (getRandomValues) {\n  // WHATWG crypto RNG - http://wiki.whatwg.org/wiki/Crypto\n  var rnds8 = new Uint8Array(16); // eslint-disable-line no-undef\n\n  module.exports = function whatwgRNG() {\n    getRandomValues(rnds8);\n    return rnds8;\n  };\n} else {\n  // Math.random()-based (RNG)\n  //\n  // If all else fails, use Math.random().  It's fast, but is of unspecified\n  // quality.\n  var rnds = new Array(16);\n\n  module.exports = function mathRNG() {\n    for (var i = 0, r; i < 16; i++) {\n      if ((i & 0x03) === 0) r = Math.random() * 0x100000000;\n      rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\n    }\n\n    return rnds;\n  };\n}\n","var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\nfunction v4(options, buf, offset) {\n  var i = buf && offset || 0;\n\n  if (typeof(options) == 'string') {\n    buf = options === 'binary' ? new Array(16) : null;\n    options = null;\n  }\n  options = options || {};\n\n  var rnds = options.random || (options.rng || rng)();\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = (rnds[6] & 0x0f) | 0x40;\n  rnds[8] = (rnds[8] & 0x3f) | 0x80;\n\n  // Copy bytes to buffer, if provided\n  if (buf) {\n    for (var ii = 0; ii < 16; ++ii) {\n      buf[i + ii] = rnds[ii];\n    }\n  }\n\n  return buf || bytesToUuid(rnds);\n}\n\nmodule.exports = v4;\n","export default class Destination {\r\n  constructor (name) {\r\n    if (!name) {\r\n      throw new Error('Destination name is missing')\r\n    }\r\n    this.name = name\r\n  }\r\n}\r\n","import Destination from './destination.js'\r\n\r\nexport default class WindowDestination extends Destination {\r\n  constructor (name, { targetURL, targetIframeID } = {}) {\r\n    super(name)\r\n\r\n    if (!targetURL) {\r\n      throw new Error('Target URL is not provided')\r\n    }\r\n\r\n    if (!targetIframeID) {\r\n      throw new Error('Target iframe ID is not provided')\r\n    }\r\n\r\n    this._targetURL = targetURL\r\n    this._targetIframeID = targetIframeID\r\n    this._messageCallback = null\r\n    window.addEventListener('message', this.receiveMessage, false)\r\n  }\r\n\r\n  registerMessageCallback (callbackFn) {\r\n    this._messageCallback = callbackFn\r\n  }\r\n\r\n  sendMessage (message) {\r\n    const iframe = document.querySelector(`#${this._targetIframeID}`)\r\n    if (!iframe) {\r\n      throw new Error(`An #${this._targetIframeID} iframe does not exist in the document`)\r\n    }\r\n    const iframeWindow = iframe.contentWindow\r\n    iframeWindow.postMessage(message, this._targetURL)\r\n  }\r\n\r\n  receiveMessage (event) {\r\n    console.info('Receive message has been called')\r\n    if (event.origin !== this._targetURL) {\r\n      // Message came from a destination we're not listening for\r\n      return\r\n    }\r\n    console.info('A CEDICT response has been received', event)\r\n\r\n    let message = event.data // eslint-disable-line prefer-const\r\n    message.commType = 'postMessage'\r\n    message.originURL = event.origin\r\n\r\n    if (this._messageCallback) {\r\n      this._messageCallback(message)\r\n    }\r\n  }\r\n}\r\n","import uuidv4 from 'uuid/v4'\r\n\r\nexport default class Message {\r\n  constructor (body) {\r\n    this.role = undefined\r\n    this.type = Message.types.GENERIC\r\n    this.ID = uuidv4()\r\n    this.requestID = null\r\n    this.body = body\r\n  }\r\n}\r\n\r\n/**\r\n * Specifies a message type\r\n */\r\nMessage.types = {\r\n  GENERIC: 'Generic'\r\n}\r\n\r\n/**\r\n * Specifies whether a message is a request or response\r\n */\r\nMessage.roles = {\r\n  REQUEST: 'Request',\r\n  RESPONSE: 'Response'\r\n}\r\n","import Message from './message.js'\r\n\r\nexport default class RequestMessage extends Message {\r\n  constructor (body) {\r\n    super(body)\r\n    this.role = Message.roles.REQUEST\r\n  }\r\n}\r\n","import Message from './message.js'\r\n\r\n/**\r\n * A generic response to a request message\r\n */\r\nexport default class ResponseMessage extends Message {\r\n  /**\r\n   * @param {RequestMessage} request - A request that resulted in this response\r\n   * @param {Object} body - A response message body\r\n   * @param {symbol} responseCode - A status code for a request that initiated this response\r\n   * (i.e. Success, Failure, etc.)\r\n   */\r\n  constructor (request, body = {}, responseCode = ResponseMessage.responseCodes.UNDEFINED) {\r\n    super(body)\r\n    this.role = Message.roles.RESPONSE\r\n    this.requestID = request.ID // ID of the request to match request and response\r\n    this.responseCode = responseCode\r\n  }\r\n\r\n  /**\r\n   * A builder for a message with a SUCCESS response code.\r\n   *\r\n   * @param request\r\n   * @param {Object} body - A response message body\r\n   * @return {ResponseMessage}\r\n   * @constructor\r\n   */\r\n  static Success (request, body) {\r\n    return new this(request, body, ResponseMessage.responseCodes.SUCCESS)\r\n  }\r\n\r\n  /**\r\n   * A builder for a message with an Error response code.\r\n   *\r\n   * @param request\r\n   * @param {Error} error - An error object\r\n   * @return {ResponseMessage}\r\n   * @constructor\r\n   */\r\n  static Error (request, error) {\r\n    return new this(request, error, ResponseMessage.responseCodes.ERROR)\r\n  }\r\n\r\n  /**\r\n   * Checks if this message is a response (i.e. follows a response message format)\r\n   *\r\n   * @param message\r\n   */\r\n  static isResponse (message) {\r\n    return message.role &&\r\n    Symbol.for(message.role) === Message.roles.RESPONSE && message.requestID\r\n  }\r\n}\r\n\r\n/**\r\n * Specifies whether a request was processed successfully or not\r\n */\r\nResponseMessage.responseCodes = {\r\n  // Request was processed successfully.\r\n  // In this case a message body may contain a response data object or be empty\r\n  SUCCESS: 'Success',\r\n\r\n  // There is no information about what was the outcome of request\r\n  UNDEFINED: 'Undefined',\r\n\r\n  // Request failed\r\n  ERROR: 'Error'\r\n}\r\n","import ResponseMessage from './messages/response-message'\r\nimport StoredRequest from './stored-request'\r\n\r\nexport default class MessagingService {\r\n  constructor () {\r\n    /**\r\n     * A map where outgoing messages will be stored.\r\n     *\r\n     * @type {Map<string, StoredRequest>}\r\n     */\r\n    this._messages = new Map()\r\n    this._destinations = new Map()\r\n\r\n    console.info('A messaging service has been created')\r\n  }\r\n\r\n  registerDestination (destination) {\r\n    this._destinations.set(destination.name, destination)\r\n    destination.registerMessageCallback(this.dispatchMessage.bind(this))\r\n  }\r\n\r\n  /**\r\n   * A message dispatcher function\r\n   *\r\n   * @param message\r\n   */\r\n  dispatchMessage (message) {\r\n    if (!message.requestID) {\r\n      console.error('A message with an unknown request ID will be ignored:', message)\r\n      return\r\n    }\r\n\r\n    if (!this._messages.has(message.requestID)) {\r\n      console.error(`A message with a request ID ${message.requestID} is not registered in a request list`, message)\r\n      return\r\n    }\r\n\r\n    this.fulfillRequest(message)\r\n  }\r\n\r\n/**\r\n   * Registers an outgoing request in a request map. Returns a promise that will be fulfilled when when\r\n   * a response will be received or will be rejected when a timeout will expire.\r\n   * @param {RequestMessage} request - An outgoing request.\r\n   * @param {number} timeout - A number of milliseconds we'll wait for response before rejecting a promise.\r\n   * @return {Promise} - An asynchronous result of an operation.\r\n   */\r\n  registerRequest (request, timeout = 10000) {\r\n    let storedRequest = new StoredRequest(request) // eslint-disable-line prefer-const\r\n    this._messages.set(request.ID, storedRequest)\r\n    storedRequest.timeoutID = window.setTimeout((requestID) => {\r\n      storedRequest.reject(new Error('Timeout has been expired'))\r\n      this._messages.delete(requestID) // Remove from map\r\n    }, timeout)\r\n    return storedRequest.promise\r\n  }\r\n\r\n  /**\r\n   * Passes a response information to the request callback by resolving or rejecting a promise.\r\n   * If request has been completed successfully, promise is resolved with the response message object.\r\n   * If request failed, a responseCode is ERROR and a response body contains\r\n   * a TranferrableError JSON-like object. In this case an error instance will be created\r\n   * and a promise will be rejected with this error object.\r\n   *\r\n   * @param responseMessage\r\n   */\r\n  fulfillRequest (responseMessage) {\r\n    if (this._messages.has(responseMessage.requestID)) {\r\n      const requestInfo = this._messages.get(responseMessage.requestID)\r\n      const responseCode = ResponseMessage.responseCode(responseMessage)\r\n      window.clearTimeout(requestInfo.timeoutID) // Clear a timeout\r\n      if (responseCode === ResponseMessage.responseCodes.ERROR) {\r\n        // There was an error\r\n        requestInfo.reject(responseMessage) // Resolve with a response message body\r\n      } else {\r\n        // Request was processed without errors\r\n        requestInfo.resolve(responseMessage)\r\n      }\r\n      this._messages.delete(responseMessage.requestID) // Remove request from a map\r\n    }\r\n  }\r\n\r\n  rejectRequest (requestID, error) {\r\n    if (requestID && this._messages.has(requestID)) {\r\n      let requestInfo = this._messages.get(requestID) // eslint-disable-line prefer-const\r\n      window.clearTimeout(requestInfo.timeoutID) // Clear a timeout\r\n      requestInfo.reject(error)\r\n      this._messages.delete(requestID) // Remove request from a map\r\n    }\r\n  }\r\n\r\n  sendRequestTo (destName, request, timeout = 10000) {\r\n    if (!destName) {\r\n      throw new Error('Destination name is not provided')\r\n    }\r\n\r\n    if (!this._destinations.has(destName)) {\r\n      throw new Error(`Unknown destination ${destName}`)\r\n    }\r\n\r\n    const promise = this.registerRequest(request, timeout)\r\n    this._destinations.get(destName).sendMessage(request)\r\n    return promise\r\n  }\r\n\r\n  sendResponseTo (request, response) {\r\n    if (!destName) {\r\n      throw new Error('Destination name is not provided')\r\n    }\r\n\r\n    if (!this._destinations.has(destName)) {\r\n      throw new Error(`Unknown destination ${destName}`)\r\n    }\r\n\r\n    const promise = this.registerRequest(request, timeout)\r\n    this._destinations.get(destName).sendMessage(request)\r\n    return promise\r\n  }\r\n}\r\n","export default class StoredRequest {\r\n  constructor () {\r\n    this.resolve = undefined\r\n    this.reject = undefined\r\n    // Promise sets reject and resolve\r\n    this.promise = new Promise(this.executor.bind(this))\r\n  }\r\n\r\n  executor (resolve, reject) {\r\n    this.resolve = resolve\r\n    this.reject = reject\r\n  }\r\n}\r\n"],"sourceRoot":""}