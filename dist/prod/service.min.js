!function webpackUniversalModuleDefinition(e,t){if("object"==typeof exports&&"object"==typeof module)module.exports=t();else if("function"==typeof define&&define.amd)define([],t);else{var r=t();for(var s in r)("object"==typeof exports?exports:e)[s]=r[s]}}(window,(function(){return function(e){var t={};function __webpack_require__(r){if(t[r])return t[r].exports;var s=t[r]={i:r,l:!1,exports:{}};return e[r].call(s.exports,s,s.exports,__webpack_require__),s.l=!0,s.exports}return __webpack_require__.m=e,__webpack_require__.c=t,__webpack_require__.d=function(e,t,r){__webpack_require__.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},__webpack_require__.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},__webpack_require__.t=function(e,t){if(1&t&&(e=__webpack_require__(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(__webpack_require__.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var s in e)__webpack_require__.d(r,s,function(t){return e[t]}.bind(null,s));return r},__webpack_require__.n=function(e){var t=e&&e.__esModule?function getDefault(){return e.default}:function getModuleExports(){return e};return __webpack_require__.d(t,"a",t),t},__webpack_require__.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},__webpack_require__.p="",__webpack_require__(__webpack_require__.s=3)}([function(e,t,r){var s=r(1),i=r(2);e.exports=function v4(e,t,r){var o=t&&r||0;"string"==typeof e&&(t="binary"===e?new Array(16):null,e=null);var n=(e=e||{}).random||(e.rng||s)();if(n[6]=15&n[6]|64,n[8]=63&n[8]|128,t)for(var a=0;a<16;++a)t[o+a]=n[a];return t||i(n)}},function(e,t){var r="undefined"!=typeof crypto&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto)||"undefined"!=typeof msCrypto&&"function"==typeof window.msCrypto.getRandomValues&&msCrypto.getRandomValues.bind(msCrypto);if(r){var s=new Uint8Array(16);e.exports=function whatwgRNG(){return r(s),s}}else{var i=new Array(16);e.exports=function mathRNG(){for(var e,t=0;t<16;t++)0==(3&t)&&(e=4294967296*Math.random()),i[t]=e>>>((3&t)<<3)&255;return i}}},function(e,t){for(var r=[],s=0;s<256;++s)r[s]=(s+256).toString(16).substr(1);e.exports=function bytesToUuid(e,t){var s=t||0,i=r;return[i[e[s++]],i[e[s++]],i[e[s++]],i[e[s++]],"-",i[e[s++]],i[e[s++]],"-",i[e[s++]],i[e[s++]],"-",i[e[s++]],i[e[s++]],"-",i[e[s++]],i[e[s++]],i[e[s++]],i[e[s++]],i[e[s++]],i[e[s++]]].join("")}},function(e,t,r){"use strict";r.r(t);var s=r(0),i=r.n(s);class message_Message{constructor(e={}){this.role=void 0,this.type=message_Message.types.GENERIC,this.ID=i()(),this.body=e}}message_Message.roles={REQUEST:"Request",RESPONSE:"Response"},message_Message.types={GENERIC:"Generic"};class response_message_ResponseMessage extends message_Message{constructor(e,t={},r=response_message_ResponseMessage.responseCodes.UNDEFINED){if(super(t),!e)throw new Error("Request is not provided");if(!e.ID)throw new Error("Request has no ID");this.role=message_Message.roles.RESPONSE,this.requestHeader=e.header||{},this.requestID=e.ID,this.responseCode=r}static Success(e,t={}){return new this(e,t,response_message_ResponseMessage.responseCodes.SUCCESS)}static Error(e,t){return new this(e,t,response_message_ResponseMessage.responseCodes.ERROR)}static isResponse(e){return e.role&&e.role===message_Message.roles.RESPONSE&&e.requestHeader&&e.requestID}}response_message_ResponseMessage.responseCodes={SUCCESS:"Success",UNDEFINED:"Undefined",ERROR:"Error"};class StoredRequest{constructor(){this.resolve=null,this.reject=null,this.promise=new Promise(this.executor.bind(this))}executor(e,t){this.resolve=e,this.reject=t}}let o=new Map;class messaging_service_MessagingService{constructor(e,t=[]){if(!e)throw new Error(messaging_service_MessagingService.errMsgs.NO_NAME);this.name=e,this._messages=new Map,this._destinations=new Map,Array.isArray(t)||(t=[t]),t.forEach(e=>this.registerDestination(e))}static hasService(e){return o.has(e)}static getService(e){return o.get(e)}static createService(e,t=[]){const r=new messaging_service_MessagingService(e,t);return o.set(e,r),r}static deleteService(e){return o.delete(e)}registerDestination(e){if(this._destinations.has(e.name))throw new Error("Destination already exists");this._destinations.set(e.name,e),e.registerResponseCallback(this.dispatchMessage.bind(this))}updateDestination(e){if(!this._destinations.has(e.name))throw new Error("Cannot update a destination that does not exist");this._destinations.set(e.name,e),e.registerResponseCallback(this.dispatchMessage.bind(this))}dispatchMessage(e){if(!response_message_ResponseMessage.isResponse(e))return void console.error("A message not following a response format will be ignored:",e);if(!this._messages.has(e.requestID))return;const t=this._messages.get(e.requestID);window.clearTimeout(t.timeoutID),e.responseCode===response_message_ResponseMessage.responseCodes.ERROR?t.reject(e.body):t.resolve(e),this._messages.delete(e.requestID)}registerRequest(e,t=1e4){if(this._messages.has(e.ID))throw new Error(`Request with ${e.ID} ID is already registered`);let r=new StoredRequest(e);return this._messages.set(e.ID,r),r.timeoutID=window.setTimeout(t=>{r.reject(new Error(`Timeout has been expired for a message with request ID ${e.ID}`)),this._messages.delete(t)},t),r.promise}sendRequestTo(e,t,r=1e4){if(!e)throw new Error("Destination name is not provided");if(!this._destinations.has(e))throw new Error(`Unknown destination ${e}`);const s=this.registerRequest(t,r);return this._destinations.get(e).sendRequest(t),s}registerReceiverCallback(e,t){if(!e)throw new Error("No destination name provided");if(!this._destinations.has(e))throw new Error(`Unknown destination ${e}`);this._destinations.get(e).registerReceiverCallback(t)}}messaging_service_MessagingService.errMsgs={NO_NAME:"MessagingService must be created with a name"};class window_iframe_destination_WindowIframeDestination extends class Destination{constructor({name:e}={}){if(!e)throw new Error("Destination name is missing");this.name=e,this._responseCallback=null}registerResponseCallback(e){this._responseCallback=e}}{constructor({name:e,targetURL:t,targetIframeID:r}={}){if(super({name:e}),!t)throw new Error("Target URL is not provided");if(!r)throw new Error("Target iframe ID is not provided");this._targetURL=t,this._targetIframeID=r,window.addEventListener("message",this._responseHandler.bind(this),!1)}registerReceiverCallback(e){window.addEventListener("message",this._requestHandler.bind(this,e),!1)}sendRequest(e){const t=document.querySelector(`#${this._targetIframeID}`);if(!t)throw new Error(`An #${this._targetIframeID} iframe does not exist in the document`);t.contentWindow.postMessage(e,this._targetURL)}sendResponse(e){window.parent.postMessage(e,e.requestHeader.origin)}_requestHandler(e,t){let r=t.data;r.header.origin=t.origin,e(r,this.sendResponse.bind(this))}_responseHandler(e){if(e.origin!==this._targetURL)return;const t=e.data;this._responseCallback&&this._responseCallback(t)}}class Storage{constructor(e){this.constructor._checkConfiguration(e),this._configuration=e}static _checkConfiguration(e){if(!e.name)throw new Error(Storage.errMsgs.CONF_NO_NAME);if(!e.version)throw new Error(Storage.errMsgs.CONF_NO_VER)}create(){return new Promise(e=>{e()})}destroy(){return new Promise(e=>{e()})}connect(){return new Promise(e=>{e()})}disconnect(){return new Promise(e=>{e()})}getIntegrityData(){return new Promise(e=>{e({})})}}Storage.errMsgs={CONF_NO_NAME:"Storage name is missing from a configuration",CONF_NO_VER:"Storage version is missing from a configuration"};class Store{constructor(e){this.constructor._checkConfiguration(e),this._configuration=e}static _checkConfiguration(e){if(!e.name)throw new Error(Store.errMsgs.CONF_NO_NAME)}associateWith(e){return this}create(){return new Promise(e=>{e()})}clear(){return new Promise(e=>{e()})}destroy(){return new Promise(e=>{e()})}get(e,t){return new Promise(e=>{e()})}getEntries(e,{index:t=""}={}){return new Promise(e=>{e()})}getAllEntries(){return new Promise(e=>{e()})}insert(e){return new Promise(e=>{e()})}update(e){return new Promise(e=>{e()})}count(){return new Promise(e=>{e()})}}Store.accessModes={READ:"readonly",READ_WRITE:"readwrite"},Store.errMsgs={CONF_NO_NAME:"A store name is missing from a configuration"};class indexed_db_store_IndexedDbStore extends Store{constructor(e){super(e),this._configuration=e,this._db=null}static _checkConfiguration(e){if(!e.name)throw new Error(indexed_db_store_IndexedDbStore.errMsgs.NO_STORE_NAME);if(!e.primaryIndex)throw new Error(indexed_db_store_IndexedDbStore.errMsgs.NO_PRIMARY_INDEX);if(!e.primaryIndex.hasOwnProperty("keyPath")&&!e.primaryIndex.hasOwnProperty("auto"))throw new Error(indexed_db_store_IndexedDbStore.errMsgs.NO_PRIMARY_INDEX_PROPS)}associateWith(e){return this._db=e,this}dissociate(){return this._db=null,this}_assertDb(){if(!this._db)throw new Error(indexed_db_store_IndexedDbStore.errMsgs.NO_DB)}get _isAutoPrimaryKey(){return this._configuration.primaryIndex.hasOwnProperty("auto")&&this._configuration.primaryIndex.auto}get _secondaryIndexes(){return Object.values(this._configuration.indexes)}get _secondaryIndexNames(){return Object.values(this._configuration.indexes).map(e=>e.name)}create(){return new Promise((e,t)=>{this._assertDb();const r=this._configuration.primaryIndex.keyPath?{keyPath:this._configuration.primaryIndex.keyPath}:void 0,s=this._db.createObjectStore(this._configuration.name,r);this._configuration.indexes&&this._secondaryIndexes.forEach(e=>{try{s.createIndex(e.name,e.keyPath,{unique:e.unique})}catch(e){t(e)}}),e()})}clear(){return new Promise((e,t)=>{this._assertDb();let r=this._db.transaction(this._configuration.name,indexed_db_store_IndexedDbStore.accessModes.READ_WRITE);r.onerror=e=>t(e),r.objectStore(this._configuration.name).clear().onsuccess=()=>e()})}async get(e,t={}){if(void 0===e)throw new Error(indexed_db_store_IndexedDbStore.errMsgs.NO_KEYS_PROVIDED);return this.getEntries([e],t).then(t=>t[e])}getEntries(e,{index:t}={}){return new Promise((r,s)=>{this._assertDb(),void 0===e&&s(new Error(indexed_db_store_IndexedDbStore.errMsgs.NO_KEYS_PROVIDED)),Array.isArray(e)||(e=[e]),0===e.length&&s(new Error(indexed_db_store_IndexedDbStore.errMsgs.NO_KEYS_PROVIDED));const i=this._db.transaction(this._configuration.name,indexed_db_store_IndexedDbStore.accessModes.READ).objectStore(this._configuration.name);let o=e.reduce((e,t)=>(e[t]=[],e),{});for(let s=0;s<e.length;s++){const n=e[s];let a;if(void 0===t)a=i.getAll(IDBKeyRange.only(n));else{if(!this._secondaryIndexNames.includes(t))throw new Error(indexed_db_store_IndexedDbStore.errMsgs.MISSING_SECONDARY_INDEX);const e=i.index(t);a=e.getAll(IDBKeyRange.only(n))}a.onsuccess=()=>{o[n]=a.result,s===e.length-1&&r(o)}}})}getAllEntries(){return new Promise((e,t)=>{this._assertDb();const r=this._db.transaction(this._configuration.name,indexed_db_store_IndexedDbStore.accessModes.READ);r.onerror=e=>{t(e)};const s=r.objectStore(this._configuration.name).getAll();s.onsuccess=()=>{const t=s.result;e(t)}})}insert(e){return new Promise((t,r)=>{e||t(),this._assertDb(),Array.isArray(e)||(e=[e]);let s=this._db.transaction(this._configuration.name,indexed_db_store_IndexedDbStore.accessModes.READ_WRITE);s.oncomplete=()=>t(),s.onerror=e=>r(e);const i=s.objectStore(this._configuration.name);e.forEach(e=>{let t=i.add(e);t.onerror=()=>{"ConstraintError"===t.error.name&&r(new Error(indexed_db_store_IndexedDbStore.errMsgs.DUPLICATE_RECORD)),r(t.error)}})})}update(e){return new Promise((t,r)=>{e||t(),Array.isArray(e)||r(new Error("Records format must be [key,val] or [[key,val]]")),Array.isArray(e[0])||(e=[e]),this._assertDb();const s=this._db.transaction(this._configuration.name,indexed_db_store_IndexedDbStore.accessModes.READ_WRITE);s.oncomplete=()=>t(),s.onerror=e=>r(e);const i=s.objectStore(this._configuration.name);e.forEach(e=>{let t=this._isAutoPrimaryKey?i.put(e[0],e[1]):i.put(e[0]);t.onerror=()=>r(t.error)})})}count(){return new Promise((e,t)=>{this._assertDb();try{const t=this._db.transaction(this._configuration.name,indexed_db_store_IndexedDbStore.accessModes.READ).objectStore(this._configuration.name).count();t.onsuccess=()=>{e(t.result)}}catch(e){t(e)}})}}indexed_db_store_IndexedDbStore.errMsgs={NO_DB:"Store is not associated with a DB",NO_STORE_NAME:"A store name is missing from a configuration",NO_PRIMARY_INDEX:"A primaryIndex tree is missing from a configuration",NO_PRIMARY_INDEX_PROPS:'A primaryIndex tree must have either a "keyPath" or "auto" props',NO_KEYS_PROVIDED:"No keys are provided",MISSING_SECONDARY_INDEX:"Specified secondary index does not exist",DUPLICATE_RECORD:"Record already exists"};class cedict_permanent_storage_CedictPermanentStorage extends Storage{constructor(e){super(e),this._configuration=e,this._db=null,this._stores=new Map,this.metaKey=1,Object.values(this._configuration.stores).forEach(e=>{this._stores.set(e.name,new indexed_db_store_IndexedDbStore(e))})}static _checkConfiguration(e){if(!e.name)throw new Error(cedict_permanent_storage_CedictPermanentStorage.errMsgs.NO_STORAGE_NAME);if(!e.version)throw new Error(cedict_permanent_storage_CedictPermanentStorage.errMsgs.NO_STORAGE_VERSION);if(!e.stores)throw new Error(cedict_permanent_storage_CedictPermanentStorage.errMsgs.NO_STORES)}_assertConnection(){if(!this._db)throw new Error(cedict_permanent_storage_CedictPermanentStorage.errMsgs.CLOSED_CONNECTION)}hasStore(e){return this._stores.has(e)}getStore(e){if(!this._stores.has(e))throw new Error(cedict_permanent_storage_CedictPermanentStorage.errMsgs.MISSING_STORE);return this._assertConnection(),this._stores.get(e)}getIntegrityData(){let e;this._assertConnection();try{e=[this._stores.get("meta"),this._stores.get("dictionary")].map(e=>e.count()),e.push(this._stores.get("meta").get(this.metaKey))}catch(e){return Promise.reject(e)}return Promise.all(e).then(([e,t,r])=>{if(!r||0===r.length)throw new Error(cedict_permanent_storage_CedictPermanentStorage.errMsgs.NO_META);return{recordsInMeta:e,recordsInDictionary:t,metadata:r[0]}})}connect(){return new Promise((e,t)=>{let r;try{r=indexedDB.open(this._configuration.name,this._configuration.version)}catch(e){t(e)}r.onupgradeneeded=this._create.bind(this,r),r.onblocked=()=>t(new Error(cedict_permanent_storage_CedictPermanentStorage.errMsgs.BLOCKED_ON_OPEN)),r.onsuccess=()=>{this._db=r.result,this._db.onversionchange=this._versionchangeHandler.bind(this,t),this._stores.forEach(e=>e.associateWith(this._db)),e()},r.onerror=e=>{t(e)}})}disconnect(){return this._db&&(this._stores.forEach(e=>e.dissociate()),this._db.close(),this._db=null),Promise.resolve()}clear(){return this._assertConnection(),Promise.all(Array.from(this._stores.values()).map(e=>e.clear()))}_create(e,t){this._db=e.result;const r=Array.from(this._stores.values()).map(e=>e.associateWith(this._db).create());return Promise.all(r)}destroy(){return new Promise((e,t)=>{this._assertConnection(),this.disconnect().then(()=>{const r=indexedDB.deleteDatabase(this._configuration.name);r.onsuccess=()=>{e()},r.onerror=()=>{t(new Error(cedict_permanent_storage_CedictPermanentStorage.errMsgs.DESTRUCTION_ERROR))}})})}async _versionchangeHandler(e){await this.disconnect(),console.error(cedict_permanent_storage_CedictPermanentStorage.errMsgs.VERSION_CHANGE),e(new Error(cedict_permanent_storage_CedictPermanentStorage.errMsgs.VERSION_CHANGE))}}cedict_permanent_storage_CedictPermanentStorage.errMsgs={NO_STORAGE_NAME:"Storage name is missing from a configuration",NO_STORAGE_VERSION:"Storage version is missing from a configuration",NO_STORES:"No stores are defined in a configuration",NO_META:"Metadata store has no records",DESTRUCTION_ERROR:"Unable to destroy a storage",MISSING_STORE:"The store requested does not exist",CLOSED_CONNECTION:"Connection to the store is closed",BLOCKED_ON_OPEN:"Request to open a database has been blocked",VERSION_CHANGE:"A database change has occurred. You should refresh this browser window or close it down."};class cedict_Cedict{constructor(e){cedict_Cedict.checkConfiguration(e),this._configuration=e,this.isReady=!1,this._storage=new cedict_permanent_storage_CedictPermanentStorage(this._configuration.storage),this.cedict={meta:{},metaKey:1,dictionary:null,traditionalHeadwordsIdx:null,simplifiedHeadwordsIdx:null},this.preferredCharacterForm=cedict_Cedict.characterForms.TRADITIONAL,this.fallbackCharacterForm=cedict_Cedict.characterForms.SIMPLIFIED}static checkConfiguration(e){if(!e.storage)throw new Error(cedict_Cedict.errMsgs.CONF_NO_STORAGE);if(!e.storage.stores)throw new Error(cedict_Cedict.errMsgs.CONF_NO_STORES);if(!e.storage.stores.dictionary)throw new Error(cedict_Cedict.errMsgs.CONF_NO_DICT);if(!e.storage.stores.dictionary.primaryIndex)throw new Error(cedict_Cedict.errMsgs.CONF_NO_DICT_PRIMARY_IDX);if(!e.storage.stores.dictionary.primaryIndex.hasOwnProperty("keyPath"))throw new Error(cedict_Cedict.errMsgs.CONF_NO_DICT_PRIMARY_IDX_KEY_PATH);if(!e.storage.stores.dictionary.volatileStorage)throw new Error(cedict_Cedict.errMsgs.CONF_NO_DICT_VOLATILE);if(!e.storage.stores.dictionary.volatileStorage.hasOwnProperty("enabled"))throw new Error(cedict_Cedict.errMsgs.CONF_NO_DICT_VOLATILE_ENABLED);if(!e.storage.stores.dictionary.volatileStorage.hasOwnProperty("indexed"))throw new Error(cedict_Cedict.errMsgs.CONF_NO_DICT_VOLATILE_INDEXED);if(!e.storage.stores.dictionary.permanentStorage)throw new Error(cedict_Cedict.errMsgs.CONF_NO_DICT_PERM);if(!e.storage.stores.dictionary.permanentStorage.hasOwnProperty("enabled"))throw new Error(cedict_Cedict.errMsgs.CONF_NO_DICT_PERM_ENABLED);if(!e.storage.stores.dictionary.permanentStorage.hasOwnProperty("indexed"))throw new Error(cedict_Cedict.errMsgs.CONF_NO_DICT_PERM_INDEXED);if(!e.data)throw new Error(cedict_Cedict.errMsgs.CONF_NO_DATA);if(!e.data.version)throw new Error(cedict_Cedict.errMsgs.CONF_NO_DATA_VER);if(!e.data.revision)throw new Error(cedict_Cedict.errMsgs.CONF_NO_DATA_REV);if(!e.data.recordsCount)throw new Error(cedict_Cedict.errMsgs.CONF_NO_DATA_REC_COUNT);if(!e.data.URI)throw new Error(cedict_Cedict.errMsgs.CONF_NO_DATA_URI);if(!e.data.chunks||0===e.data.chunks.length)throw new Error(cedict_Cedict.errMsgs.CONF_NO_DATA_CHUNKS)}async init(){let e=!0;try{await this._storage.connect()}catch(t){if(t.name!==cedict_Cedict.errNames.SECURITY_ERR)throw t;e=!1,console.warn("LexisCS will disable IndexedDB because it is not supported in the current environment")}return e?this._initWithIndexedDb():this._initWithoutIndexedDb()}_initWithIndexedDb(){return new Promise((e,t)=>this._storage.getIntegrityData().then(e=>{if(!this.isStorageIntact(e))throw new Error("Storage is outdated");if(this._configuration.storage.stores.dictionary.volatileStorage.enabled)return this._storage.getStore("dictionary").getAllEntries().then(t=>this._populateVolatileStorage(e.metadata,t)).catch(e=>t(e))}).catch(()=>this.removePermanentData().then(()=>this._storage.connect()).then(()=>this._downloadData()).then(({meta:e,dictionary:t})=>(this._configuration.storage.stores.dictionary.volatileStorage.enabled&&this._populateVolatileStorage(e,t),this._populatePermanentStorage(e,t).then(()=>Promise.resolve()).catch(r=>(console.error("Unable to store CEDICT data to IndexedDB.",r),this._configuration.storage.stores.dictionary.volatileStorage.enabled||(console.warn("Switched to in-memory placement of CEDICT data"),this._configuration.storage.stores.dictionary.volatileStorage.enabled=!0,this._populateVolatileStorage(e,t)),Promise.resolve()))))).then(()=>{this.isReady=!0,e()}).catch(e=>{t(e)}))}async _initWithoutIndexedDb(){const{meta:e,dictionary:t}=await this._downloadData();this._configuration.storage.stores.dictionary.permanentStorage.enabled=!1,this._configuration.storage.stores.dictionary.volatileStorage.enabled=!0,this._configuration.storage.stores.dictionary.volatileStorage.indexed=!0,await this._populateVolatileStorage(e,t),this.isReady=!0}removePermanentData(){return this._storage.destroy()}static isSupportedCharacterForm(e){return Array.from(Object.values(cedict_Cedict.characterForms)).includes(e)}isStorageIntact(e){return 1===e.recordsInMeta&&e.recordsInDictionary===this._configuration.data.recordsCount&&e.metadata.version===this._configuration.data.version&&e.metadata.revision===this._configuration.data.revision}getWords(e,t){if(!this.isReady)return Promise.reject(new Error(cedict_Cedict.errMsgs.NOT_READY));let r=!0;if(void 0!==t){if(!cedict_Cedict.isSupportedCharacterForm(t))return Promise.reject(new Error(`${cedict_Cedict.errMsgs.BAD_CHAR_FORM} "${t}"`));r=!1}if(!e)return Promise.resolve({});const s=this._configuration.storage.stores.dictionary.volatileStorage.enabled?this._getWordsFromVolatileStorage.bind(this):this._getWordsFromPermanentStorage.bind(this);return new Promise((i,o)=>{r?s(e,this.preferredCharacterForm).then(t=>{if(!(cedict_Cedict._getResultRecordsCount(t)>0))return s(e,this.fallbackCharacterForm);i({[this.preferredCharacterForm]:t})}).then(e=>{const t=cedict_Cedict._getResultRecordsCount(e)>0?{[this.fallbackCharacterForm]:e}:{};i(t)}).catch(e=>o(e)):s(e,t).then(e=>{const r=cedict_Cedict._getResultRecordsCount(e)>0?{[t]:e}:{};i(r)}).catch(e=>o(e))})}_getWordsFromVolatileStorage(e,t){return new Promise((r,s)=>{try{Array.isArray(e)||(e=[e]);let s=e.reduce((e,t)=>(e[t]=[],e),{});this._configuration.storage.stores.dictionary.volatileStorage.indexed?e.forEach(e=>{const r=t===cedict_Cedict.characterForms.SIMPLIFIED?this.cedict.simplifiedHeadwordsIdx.get(e):this.cedict.traditionalHeadwordsIdx.get(e);s[e]=r?r.map(e=>this.cedict.dictionary.get(e)):[]}):this.cedict.dictionary.forEach(r=>{const i=t===cedict_Cedict.characterForms.SIMPLIFIED?r.simplified.headword:r.traditional.headword;e.forEach(e=>{i===e&&s[e].push(r)})}),r(s)}catch(e){s(e)}})}_getWordsFromPermanentStorage(e,t){const r=t===cedict_Cedict.characterForms.SIMPLIFIED?"simplifiedHwIdx":"traditionalHwIdx";return this._storage.getStore("dictionary").getEntries(e,{index:r})}_downloadData(){const e=this._configuration.data.chunks.map(e=>this._loadJson(`${this._configuration.data.URI}/${e}`));return Promise.all(e).then(e=>{let t=e[0].metadata;return t.cedict=e[0].cedictMeta,delete t.chunkNumber,{meta:t,dictionary:e.map(e=>e.entries).flat()}})}_populateVolatileStorage(e,t){this.cedict.meta=e,this._configuration.storage.stores.dictionary.volatileStorage.indexed?(this.cedict.dictionary=new Map,t.forEach(e=>this.cedict.dictionary.set(e[this._configuration.storage.stores.dictionary.primaryIndex.keyPath],e)),this._indexVolatileStorage()):this.cedict.dictionary=t}_indexVolatileStorage(){this.cedict.traditionalHeadwordsIdx=new Map,this.cedict.simplifiedHeadwordsIdx=new Map,this.cedict.dictionary.forEach(e=>{this.cedict.traditionalHeadwordsIdx.has(e.traditional.headword)?this.cedict.traditionalHeadwordsIdx.get(e.traditional.headword).push(e.index):this.cedict.traditionalHeadwordsIdx.set(e.traditional.headword,[e.index]),this.cedict.simplifiedHeadwordsIdx.has(e.simplified.headword)?this.cedict.simplifiedHeadwordsIdx.get(e.simplified.headword).push(e.index):this.cedict.simplifiedHeadwordsIdx.set(e.simplified.headword,[e.index])})}async _populatePermanentStorage(e,t){await this._storage.getStore("meta").update([e,this.cedict.metaKey]),await this._storage.getStore("dictionary").insert(t)}_loadJson(e){return fetch(e).then(e=>e.json())}static _getResultRecordsCount(e){return Object.values(e).flat().length}}cedict_Cedict.characterForms={SIMPLIFIED:"simplified",TRADITIONAL:"traditional"},cedict_Cedict.errMsgs={CONF_NO_STORAGE:"Storage tree is missing from a configuration",CONF_NO_STORES:"Stores data is missing from a configuration",CONF_NO_DICT:"Dictionary tree is missing from a configuration",CONF_NO_DICT_PRIMARY_IDX:"A primaryIndex tree of a dictionary is missing from a configuration",CONF_NO_DICT_PRIMARY_IDX_KEY_PATH:"A keyPath option of a primaryIndex tree of a dictionary is missing from a configuration",CONF_NO_DICT_VOLATILE:"A volatileStorage tree of a dictionary is missing from a configuration",CONF_NO_DICT_VOLATILE_ENABLED:"enabled option of a volatileStorage tree of a dictionary is missing from a configuration",CONF_NO_DICT_VOLATILE_INDEXED:"indexed option of a volatileStorage tree of a dictionary is missing from a configuration",CONF_NO_DICT_PERM:"A permanentStorage tree of a dictionary is missing from a configuration",CONF_NO_DICT_PERM_ENABLED:"enabled option of a permanentStorage tree of a dictionary is missing from a configuration",CONF_NO_DICT_PERM_INDEXED:"indexed option of a permanentStorage tree of a dictionary is missing from a configuration",CONF_NO_DATA:"Date tree is missing from a configuration",CONF_NO_DATA_VER:"Data version is missing from a configuration",CONF_NO_DATA_REV:"Data revision is missing from a configuration",CONF_NO_DATA_REC_COUNT:"Data records count is missing from a configuration",CONF_NO_DATA_URI:"Data URI is missing from a configuration",CONF_NO_DATA_CHUNKS:"Data chunks are missing from a configuration",NOT_READY:"CEDICT data is not ready",BAD_CHAR_FORM:"Unknown character form"},cedict_Cedict.errNames={SECURITY_ERR:"SecurityError"};var n={storage:{name:"cedict",version:1,stores:{meta:{name:"meta",primaryIndex:{auto:!0}},dictionary:{name:"dictionary",primaryIndex:{keyPath:"index"},indexes:{traditional:{name:"traditionalHwIdx",keyPath:"traditional.headword",unique:!1},simplified:{name:"simplifiedHwIdx",keyPath:"simplified.headword",unique:!1}},volatileStorage:{enabled:!1,indexed:!1},permanentStorage:{enabled:!0,indexed:!0}}}},data:{version:20191029,revision:1,recordsCount:117735,URI:"https://lexis-dev.alpheios.net/cedict",chunks:["cedict-v20191029-c001.json","cedict-v20191029-c002.json","cedict-v20191029-c003.json","cedict-v20191029-c004.json","cedict-v20191029-c005.json"]}};r.d(t,"CedictDestinationConfig",(function(){return c})),r.d(t,"CedictCharacterForms",(function(){return a}));const a=cedict_Cedict.characterForms,c={name:"cedict",targetURL:"https://lexis-dev.alpheios.net",targetIframeID:"alpheios-lexis-cs"};let d;const messageHandler=(e,t)=>{d.isReady?e.body.getWords?d.getWords(e.body.getWords.words,e.body.getWords.characterForm).then(r=>{t(response_message_ResponseMessage.Success(e,r))}).catch(r=>t(response_message_ResponseMessage.Error(e,r))):t(response_message_ResponseMessage.Error(e,new Error("Unsupported request"))):t(response_message_ResponseMessage.Error(e,new Error("Uninitialized")))};document.addEventListener("DOMContentLoaded",()=>{new messaging_service_MessagingService("CedictRequestListener",new window_iframe_destination_WindowIframeDestination(c)).registerReceiverCallback(c.name,messageHandler);try{d=new cedict_Cedict(n)}catch(e){return void console.error(e)}d.init().then(()=>{console.log("CEDICT service is ready")}).catch(e=>console.error(`Cannot initialize CEDICT service: ${e.message}`))})}])}));